import com.android.builder.BuilderConstants

apply plugin: 'android-library'

android {
    compileSdkVersion 19
    buildToolsVersion '19.0.3'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 1
        versionName getVersionName()
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java {
                srcDir 'src/main/java'
            }
            resources {
                srcDir 'src/main/res'
            }
        }
    }
}

task clearJar(type: Delete) {
    delete 'build/libs/'+project.name+'.jar'
}

task makeJar(type: Copy) {
    from('build/bundles/release/')
    into('build/libs/')
    include('classes.jar')
    rename ('classes.jar', 'GMHttpEngine.jar')
}

makeJar.dependsOn(clearJar, build)

dependencies {
    compile 'com.android.support:appcompat-v7:+'
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "http://maven.zjseek.com.cn/content/repositories/central/"
        }
    }
}


android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    if (name.equals(BuilderConstants.DEBUG)) {
        return; // Skip debug builds.
    }
    def task = project.tasks.create "android${name.capitalize()}Jar", Jar
    task.dependsOn variant.javaCompile
    task.from variant.javaCompile.destinationDir
    artifacts.add('archives', task);
}

android.libraryVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.plugin.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
    }

}

apply from: "../maven_push.gradle"